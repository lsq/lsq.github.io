<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux command tools on lsq 的博客</title>
    <link>https://lsq.github.io/categories/linux-command-tools/</link>
    <description>Recent content in linux command tools on lsq 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;本作品采用&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&lt;/a&gt;进行许可。&lt;br /&gt;&lt;br /&gt;背景使用了 &lt;a href=&#34;https://www.pexels.com/zh-cn/&#34; target=&#34;_blank&#34;&gt;Pexels&lt;/a&gt; 上 &lt;a href=&#34;https://www.pexels.com/zh-cn/@minan1398&#34; target=&#34;_blank&#34;&gt;Min An&lt;/a&gt; 拍摄的&lt;a href=&#34;https://www.pexels.com/zh-cn/photo/1454794/&#34; target=&#34;_blank&#34;&gt;图片&lt;/a&gt;。</copyright>
    <lastBuildDate>Fri, 13 Nov 2020 10:51:10 +0800</lastBuildDate><atom:link href="https://lsq.github.io/categories/linux-command-tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git_clone中文乱码原因</title>
      <link>https://lsq.github.io/posts/git_clone_unicode/</link>
      <pubDate>Fri, 13 Nov 2020 10:51:10 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/git_clone_unicode/</guid>
      <description>windwos 系统中git clone 下来文件名乱码原因 github上的文件名原来的编码就utf-8编码 git clone 下来的uft-8编码被转为gb18030编码，因为中文</description>
    </item>
    
    <item>
      <title>shell查找文件中包含中文的行</title>
      <link>https://lsq.github.io/posts/find_chinese/</link>
      <pubDate>Tue, 10 Nov 2020 10:51:10 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/find_chinese/</guid>
      <description>shell查找文件中包含中文的行 awk &#39;/[^!-~]/&#39; file asscii码从!到~中包含所有的大小写字母，和英文符号 cat file | grep &amp;quot;[^\u4e00-\u9fa5]&amp;quot;</description>
    </item>
    
    <item>
      <title>vim中自动格式化代码</title>
      <link>https://lsq.github.io/posts/vim_format_code/</link>
      <pubDate>Fri, 10 Jan 2020 20:02:42 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/vim_format_code/</guid>
      <description>vim中自动格式化代码 在vim中其实也有像Eclipse中的ctrl + shift +F 的自动格式化代码的操作，尽管非常强大，但是通常会破坏代码的原有的缩</description>
    </item>
    
    <item>
      <title>Git submodule错误操作</title>
      <link>https://lsq.github.io/posts/git-submodule/</link>
      <pubDate>Wed, 18 Dec 2019 21:16:35 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/git-submodule/</guid>
      <description>IDEA中GIt克隆时报： Server does not allow request for unadvertised object //工程针对子模块最近提交的改动ID 误操作后工程最近改动为： -Subproject commit //工程针对子模块上次提交的改动I</description>
    </item>
    
    <item>
      <title>git 撤回提交</title>
      <link>https://lsq.github.io/posts/git-reset/</link>
      <pubDate>Wed, 18 Dec 2019 21:15:28 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/git-reset/</guid>
      <description>写完代码后，我们一般这样 git add . //添加所有文件 git commit -m &amp;#34;本功能全部完成&amp;#34; 撤回commit 执行完commit后，想撤回commi</description>
    </item>
    
    <item>
      <title>Vim search visual text</title>
      <link>https://lsq.github.io/posts/vim_search_visual_text/</link>
      <pubDate>Mon, 18 Nov 2019 14:40:41 +0000</pubDate>
      
      <guid>https://lsq.github.io/posts/vim_search_visual_text/</guid>
      <description>vim 搜索光标下文字 / substitute 操作同样 Or you can simply yank the selected text with y and go to search mode /, then you can paste the last yanked text with Ctrl+R 0 select text, v and move yank, y goto search mode, / paste the last yanked text, Ctrl + R, 0 Enter</description>
    </item>
    
    <item>
      <title>Complete Sed Command Guide</title>
      <link>https://lsq.github.io/posts/sed-reference-guide/</link>
      <pubDate>Mon, 18 Nov 2019 18:04:57 +0800</pubDate>
      
      <guid>https://lsq.github.io/posts/sed-reference-guide/</guid>
      <description>Complete Sed Command Guide [Explained with Practical Examples] In a previous article, I showed the basic usage of Sed, the stream editor, on a practical use case. Today, be prepared to gain more insight about Sed as we will take an in-depth tour of the sed execution model. This will be also an opportunity to make an exhaustive review of all Sed commands and to dive into their details and subtleties.</description>
    </item>
    
  </channel>
</rss>
